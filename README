INTERNAL LOGIC ON FORMAT IDENTIFICATION, VALIDATION AND CHARACTERIZATION

A. The format identification is performed via Droid.  Based on the format signatures 
   exhibited in the specified url (file or http), Droid will return the PUIDs matching the format signatures in the file(URL).
	1.  If there is no PUID returned from Droid => something that means "no id found"
	2.  If droid returns one or more PUIDs, find the validator(s) associated with each PUID.
		2.1  If there is no defined validator for any PUID, retrieve the GDFR ID using PUID and then
		     continue from D (Question: choose any one?).
		2.2  If there is only one validator for all of the PUIDs, => continue from B
		2.3  If there are multiple validators, retrieve a prioritized list of validators (using an evaluator*) 
		     and validate the file with each validator (in B) until it is determined to be valid and well-formed 
		     by a validator or exhausts all applicable validators.
	3.  Exception from Droid, => say we can't identify it and log an internal message for development trouble shooting.
	
B.  The describe handler proceeds to the format validation and characterization process via the validator.  The validator 
    should return the validation result, anomalies and all technical metadata extracted from the file (URL). 
	1.  If the required metadata is missing (for example, missing MIX or AES.  This indicates the possibility of  bugs 
	    in the validator), log an internal service message for developers. 
	2.  Exception encountered during validation, => log an internal message (submit to development service?).  We can't 
	    validate it.  Continue from D.

C.  retrieve GDFR ID directly from GDFR search, using the format information returned from the validator 
    (format name+ version + profile).  Otherwise, map the format information from JHOVE result to GDFR ID.

D.	(phase 2) Retrieve the risk information from GDFR using GDFR ID.  Calculate format risk, based on the format, 
    metadata and anomaly (using validation impact database)

E.  Return GDFR ID, and optionally technical metadata and anomaly.


*Evaluator:  Given a list of validators, return a prioritized list of validators.  Each validator will be 
 assigned a priority value.  A higher value indicates higher priority.  For example, UTF8 validator will 
 have priority value 1 whereas ASCII validator will have priority 2.  If a file matches the signatures for 
 both ASCII and UTF8, the evaluator will return the both UTF8 and ASCII validators but with ASCII having 
 higher priority in the list.
